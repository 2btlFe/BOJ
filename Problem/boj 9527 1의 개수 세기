#include <bits/stdc++.h>

using namespace std;


int main() {
    long long int a, b;
    cin >> a >> b;
    a = a - 1;
    
    long long int acc[54], psum[54], cost[54];
    
    psum[1] = 1;
    for(int i = 1; i <= 54; i++) {
        psum[i] = 2*psum[i-1] + pow(2, i - 1);
    }
    
    long long int retA = 0, retB = 0;
    
    vector<int> A;
    vector<int> B;
    
    for(int i = 0; i <= 54; i++) {
        
        int bi = (b >> i)&1;
        int ai = (a >> i)&1;
        
        if(ai) {retA += psum[i] + 1; A.push_back(i);}
        if(bi) {retB += psum[i] + 1; B.push_back(i);}
    }

    int sumA = 0;
    if(A.size() >= 0) {
        for(int i = 0; i < A.size() - 1; i++) {
            sumA += A[i];
            retA += sumA;
        }
    }
    
    int sumB = 0;
    if(B.size() >= 0) {
        for(int i = 0; i < B.size() - 1; i++) {
            sumB += B[i];
            retB += sumB;
        }
    }
    
    cout << retB - retA << endl;

/*
0 0 0 0
0 0 0 1  
0 0 1 0 -> 



1 0 0 0 12개 

0 0 1 1 -> (2 + 1) + (2)

1 1 1 0 

1 0 0 0 -> ()

1           -> 1
1 0        -> (011 + 1) -> 
1 0 0
1 0 0 0

1 0 0 0 -> 13
1 0 0 1
1 0 1 0
1 0 1 1
1 1 0 0 


(13 + 5) + (4) = > 22




(33 + 5 + 1) + (4 + 1) = 5


8개 



0 0 0 0 1
1 0 0 1 0

1 0 1 0 1

1 0 0 0 0-> 33

    1
  1 0
  1 1
1 0 0-> 5



1 -> 1


(4 + 1)


1의 개수와 횟수 





   
4 8   


0 0
0 1
1 0 -> 2개



0 0 1 1 -> 4개 

0 1 0 1 -> 







    
    
    
    

    psum[1] = 2 + 1 = 3
    
    1
    2 1
    4 2 1 
    
    
    1 -> 1   1
    
    psum[1] = 1 = 1
    
    2 -> 1   2
    3 -> 2   2 + 1
    
    psum[2] = 2 + (1) = 3
    
    4 -> 1   4
    5 -> 2   4 + 1
    6 -> 2   4 + 2
    7 -> 3   4 + 2 + 1
    
    psum[3] = 4 + (1 + 3) = 8
    
    8 -> 1   8
    9 -> 2   8 + 1
    10 -> 2  8 + 2
    11 -> 3  8 + 2 + 1
    12 -> 2  8 + 4
    13 -> 3  8 + 4 + 1
    14 -> 3  8 + 4 + 2
    15 -> 4  8 + 4 + 2 + 1
    
    psum[4] = 8 + (1 + 3 + 8) = 20
    */
    
    
    
    
}
