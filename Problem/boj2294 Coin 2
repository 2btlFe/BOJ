/*
boj2294 동전2
algorithm: DP
Time Complexity: O(kn)

중복을 허용한 냅색 문제는 iterative로 푸는 것이 유리하다
*/


#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

int main() {
  int n, k;
  cin >> n >> k;

  int cost[101];

  for(int i = 0; i < n; i++) {
    cin >> cost[i];
  }

  int dp[10001]; 
  int INF = 1e6;
  for(int i = 1; i <= k; i++) dp[i] = INF;
  dp[0] = 0;

  for(int w = 1; w <= k; w++) {
    for(int j = 0; j < n; j++) {
      if(w >= cost[j]) dp[w] = min(dp[w], dp[w-cost[j]] + 1);
    }
  }
  
  if(dp[k] == INF) cout << -1;
  else cout << dp[k];
}
